# Copyright (C) 2013 Bo Peng (bpeng@mdanderson.org)
# Distributed under GPL. see <http://www.gnu.org/licenses/>
#
# Please refer to http://varianttools.sourceforge.net/Pipeline/New for
# a description of the format of this file.

[pipeline description]
description=This file defines a number of pipelines to manipulate variant
  tools annotation databases.

proj2annoDB_description=This pipeline creates an annotation database using
  variants and variant info fields of a variant tools project. The database
  can then be used, for example, to filter variants from another project.
  The input of this pipeline should be a vtools project database ($name.proj),
  the output are .ann and .DB files that can be used by another project.


[proj2annoDB_0]
action=CheckCommands('sqlite3')
comment=Check the existence of command sqlite3, which is required for this pipeline

[proj2annoDB_10]
action=RunCommand(cmd='sqlite3 ${INPUT} ".schema variant" > ${CACHE_DIR}/${INPUT: INPUT[0] + ".schema"}', 
	output='${CACHE_DIR}/${INPUT: INPUT[0] + ".schema"}')
comment=Dump the structure of the the variant table to a file.

[proj2annoDB_11]
# this step does not execute any command but make use of a lambda function
# to convert .schema file to .ann_tmp file.
action=RunCommand(cmd=${INPUT: open(INPUT[0][:-7] + ".ann_tmp", 'w').write(
	''.join(['[%%s]\nindex=%%s\ntype=%%s\n\n' %% (x.strip().split(None, 1)[0], idx + 1, x.strip().split(None, 1)[-1])
		for idx,x in enumerate(open(INPUT[0]).read().split(';')[0].split('(', 1)[1].rsplit(')', 1)[0].split(',')[2:])]))},
	output="${INPUT: INPUT[0][:-7] + '.ann_tmp'}")
comment=Convert .schema to .ann definitions

[proj2annoDB_20]
# now we have the .schema file, we need to write a .ann file
action=RunCommand(cmd=[
	"echo '[linked fields]' > ${CMD_OUTPUT: CMD_OUTPUT[0]}",
	"echo '*=chr, pos, ref, alt' >> ${CMD_OUTPUT: CMD_OUTPUT[0]}",
	"echo '[data sources]' >> ${CMD_OUTPUT: CMD_OUTPUT[0]}",
	"echo 'description=Annotation database dumped from project ${CMD_INPUT}' >> ${CMD_OUTPUT: CMD_OUTPUT[0]}",
	"echo 'delimiter=\"|\"' >> ${CMD_OUTPUT: CMD_OUTPUT[0]}",
	"echo 'anno_type=variant' >> ${CMD_OUTPUT: CMD_OUTPUT[0]}",
	"echo 'source_type=txt'  >> ${CMD_OUTPUT: CMD_OUTPUT[0]}",
	"cat ${INPUT} >> ${CMD_OUTPUT: CMD_OUTPUT[0]}" ],
	output='${CMD_OUTPUT: CMD_OUTPUT[0]}')
comment=Create an annotation definition file (.ann)

[proj2annoDB_30]
action=RunCommand(cmd='sqlite3 ${CMD_INPUT} "select * from variant;" > ${CACHE_DIR}/${CMD_INPUT: CMD_INPUT[0] + ".dump"}',
	output='${CACHE_DIR}/${CMD_INPUT: CMD_INPUT[0] + ".dump"}')
comment=Dump the variant table to a text file

[proj2annoDB_40]
action=RunCommand(cmd='vtools use ${OUTPUT20} --files ${OUTPUT30} --rebuild')
comment=Create annotation database from dumped text file

