# Copyright (C) 2011 Bo Peng (bpeng@mdanderson.org) # Distributed under GPL. see <http://www.gnu.org/licenses/>
#
# Please refer to http://varianttools.sourceforge.net/Format/New for
# a description of the format of this file.

[format description]
description=Import vcf
variant_fields=chr,pos,ref,alt
genotype_fields=%(geno_fields)s
variant_info=%(var_info)s
genotype_info=%(geno_info)s
# variants with identical chr,pos,ref will be collapsed.
export_by_fields=chr,pos,ref

[DEFAULT]
format_string='GT'
format_string_comment=FORMAT string that is outputted in the 9th column of
    exported vcf file. Please specified an appropriate value corresponding to the
    parameter --geno_info because this column cannot be automatically determined.

geno_info=
geno_info_comment=Genotype information fields. No genotype field is imported by
    default. Please check the FORMAT string of your .vcf file to determine
    available fields to be imported.

geno_fields=GT
geno_fields_comment=Field to extract genotype from .vcf file. You can set it to
    safe_GT if genotype is not the first field in the genotype columns of your .vcf file.

var_info=DP_INFO
var_info_comment=Variant information fields to be imported. Please check the
    INFO column of your vcf file for available fields.

phase_sep='/'
phase_sep_comment=Seperator used to output genotype, / for unphased and | for
    phased. This parameter is needed because 'vtools import' does not save phase
    information for each genotype.

wildtype_code=('0',)
wildtype_code_comment=How wildtype homozygotes are imported. These genotypes are
    by default imported as GT=0. They will be discarded if you set this parameter
    to None.

[Field formatter]
GT=lambda x: str(x[0])
adj=ValueOfNull('.')

[col_1]
field=chr
comment=chromosome

[col_2]
field=pos
comment=position

[col_3]
field=id
comment=id

[col_4]
field=raw_ref
comment=reference allele

[col_5]
field=raw_alt
comment=alternative alleles

[col_6]
field=qual
comment=quality

[col_7]
field=filter
comment=filter

[col_8]
field=raw_info
adj=JoinFields(';')
comment=variant info

[col_9]
field=
adj=Constant(%(format_string)s)
comment=genotype format

[col_10]
field=%(geno_fields)s,%(geno_info)s
adj=JoinFields(':')
comment=genotype



[chr]
index=1
type=VARCHAR(20)
adj=RemoveLeading('chr')
comment=Chromosome

[pos]
index=2
type=INTEGER NOT NULL
comment=1-based position

[id]
index=3
type=VARCHAR(48)
adj=Nullify('.')
comment=variant id (rs number or other IDs)

[ref]
index=4
type=VARCHAR(255)
comment=Reference allele, '-' for insertion.

[alt]
index=5
adj=CheckSplit()
type=VARCHAR(255)
comment=Alternative allele, '-' for deletion.

[raw_ref]
index=4
type=VARCHAR(255)
comment=Raw reference allele in the vcf file

[raw_alt]
index=5
adj=CheckSplit()
type=VARCHAR(255)
comment=Raw alternative allele in the vcf file

[qual]
index=6
type=FLOAT
comment=phred-scaled quality score for the assertion made in ALT. High QUAL scores indicate high confidence calls.

[filter]
index=7
type=VARCHAR(255)
comment=PASS if this position has passed all filters, i.e. a call is made at this position. Otherwise, if the site has not passed all filters, a semicolon-separated list of codes for filters that fail. 

[GT]
index=10:
type=INTEGER
adj=VcfGenotype(default=%(wildtype_code)s)
comment=Gentoype coded as 0 (ref ref), 1 (ref alt), 2 (alt alt) or -1 (alt1, alt2), assuming GT is the first FORMAT field in the .vcf file. Missing genotype will be dropped.

[safe_GT]
# This vcf genotype extractor uses format string and genotype to 
# extract genotype. Although the format string should not be needed
# because the genotype field should be the first one, one of my dataset
# does not following this rule. The performance penalty is significant
# 4.36 -> 3.03 for 50k records.
index=9, 10:
adj=VcfGenoFromFormat(default=%(wildtype_code)s)
type=INTEGER
comment=Gentoype coded as 0 (ref ref), 1 (ref alt), 2 (alt alt) or -1 (alt1, alt2). This field checks the FORMAT string and extract genotype accordingly. Missing genotype will be dropped.

[raw_info]
index=8
type=VARCHAR(255)
comment=Raw INFO column in the vcf file. This may be further splitted into various specified _INFO fields, such as DP_INFO, etc. 

[DP_INFO]
index=8
adj=ExtractValue('DP=', ';')
type=INTEGER
comment=DP fields in INFO. Total depth of samples in a vcf file.

[DP_FMT]
# Passing 'GT:DP\t0/0:64'
index=9, 10:
adj=FieldFromFormat('DP', ':')
type=INTEGER
comment=DP fields in INFO. Depth for each sample in a vcf file.
