# Copyright (C) 2013 Bo Peng (bpeng@mdanderson.org)
# Distributed under GPL. see <http://www.gnu.org/licenses/>
#
# Please refer to http://varianttools.sourceforge.net/Pipeline/New for
# a description of the format of this file.

[pipeline description]
description=A pipeline to simulate case control samples by expanding a 
	pool of haplotypes from the 1000 genomes project.

model_description=This simulation model download one or more regions
  of genotype data from the 1000 genomes project, expand it rapidly
  to get a large population, apply a disease model 
  to annotate it, and imports the EFF info as an information field. This
  pipeline requires a prior installation of snpEff but it will download
  appropriate snpEff database (e.g. hg19) automatically.

[DEFAULT]
regions=
regions_comment=One or more chromosome regions (separated by ';') in the format of
  chr:start-end (e.g. chr21:33,031,597-33,041,570), or Field:Value from a region-based
  annotation database (e.g. refGene.name2:TRIM2 or refGene_exon.name:NM_000947).
  Multiple chromosomal regions will be selected if the name matches more
  than one chromosomal regions. The regions will be marked by their indexes
  but values from another field will be used if its name is appended
  (e.g. refGene.name2:BRCA2:name will mark each regions with name of isoforms).
  Chromosome positions are 1-based and are inclusive at both ends so the 
  chromosome region has a length of end-start+1 bp.'

sizes=[1000, 1000, 1000]
sizes_comment=Number of random samples draw from simulated population.


scale=10
scale_comment=Scaling factor to speed up the simulation by scaling down the simulation
  while boosting mutation, selection and recombination rates.

[model_0]
action=CheckVariantToolsVersion('2.3.1')
comment=Check the version of variant tools. Version 2.3.1 or higher is required for the
	execution of this pipeline.

[model_1]
input_emitter=EmitInput(select=${:not glob.glob('*.proj')})
action=RunCommand('vtools init model')
comment=Create a new project if there is no existing project under the current directory.

[model_10]
action=RunCommand('vtools use refGene')
comment=Link the refGene database to the project

[model_20]
action=PopFromRegions(
	regions='%(regions)s', size=7300/%(scale)s, output='cache/empty.pop')
output='cache/temp.vcf'
comment=Create an initial population

[model_40]
#
# Using a scaling factor to increase speed of simulation
action=EvolvePop(output='cache/temp1.pop',
    mu=1.8e-8 * %(scale)s, 
	selector=ProteinSelector('%(regions)s', s_missense=0.001 * %(scale)s,
		s_stoploss=0.002 * %(scale)s, s_stopgain=0.005 * %(scale)s),
	scale= %(scale)s,
	demoModel = SettlementOfNewWorldModel(T0=20000, scale=%(scale)s),
    )
comment=Evolve and expand a population

[model_45]
action=OutputPopStat(output=['cache/LD_{}.txt'.format('${seed}'), 'cache/freq_{}.txt'.format('${seed}')])
comment=Output statistics on LD and minor allele frequency


[model_50]
action=DrawRandomSample(
	output='cache/sample.pop',
	sizes=%(sizes)s
    )
comment=Draw random samples from each subpopulation of the simulated population

[model_60]
action=PopToVcf(output=['cache/temp1.vcf', 'cache/temp1.phenotype'])
comment=Export evolved population to an vcf file

[model_70]
action=RunCommand(['vtools import ${INPUT:INPUT[0]} --force',
	'vtools phenotype --from_file ${INPUT:INPUT[1]}'])
comment=Import the vcf and phenotype to the current project




