# Copyright (C) 2013 Bo Peng (bpeng@mdanderson.org)
# Distributed under GPL. see <http://www.gnu.org/licenses/>
#
# Please refer to http://varianttools.sourceforge.net/Simulation/New for
# a description of the format of this file.

[pipeline description]
description=Simulation of case control samples for 20 genes 
	This simulation model has been
	used to simulate data for the second example in paper "Reproducible
	Simulations of realistic samples for next-gen sequencing studies
	using Variant Simulation Tools". A demographic model that mimicks that
	of the European population is used. A fine-scale recombination map is
	automatically downloaded and applied. The simulated populations are analyzed
	and discarded to save diskspace.

ms_description=This simulator calls ms to execute coalescent-based simulations,
    create a population with simulated dataset and run through the same statistical
	analysis as other pipeline.

neutral_description=A neutral simulation using a Juke-Cantor (1969) DNA 
    nucleotide mutation model, a mutation rate of 1.8x10^-8, and no
	natural selelction. 

with_selection_description=A simulation that uses identical models as the neutral
	model but use a protein selection model with selection pressure 0.005,
	0.02 and 0.1 for missense, stoploss and stopgain mutations.

[DEFAULT]
regions=refGene_exon.name2:
regions_comment=One or more chromosome regions (separated by ',') in the format of
  chr:start-end (e.g. chr21:33031597-33041570), or Field:Value from a region-based
  annotation database (e.g. refGene.name2:TRIM2 or refGene_exon.name:NM_000947).
  Please visit http://varianttools.sourceforge.net/Simulation for detailed
  description of this parameter.
  
scale=10
scale_comment=Scaling factor to speed up the simulation by scaling down the
  simulation while boosting mutation, selection and recombination rates.


[neutral_0]
action=CheckVariantToolsVersion('2.3.1')
comment=Check the version of variant tools. Version 2.3.1 or higher is required
	for the execution of this simulation.

[neutral_10]
input_emitter=EmitInput(select=${:not glob.glob('*.proj')})
action=RunCommand('vtools init Peng2014_ex1')
comment=Create a new project if there is no existing project under the current
	directory.

[neutral_20]
action=RunCommand('vtools use refGene')
comment=Link the refGene database to the project. This database is required
	to parse the regions for gene structure.

[neutral_30]
action=CreatePopulation(
	size=1000,
	regions='%(regions)s',
	output='cache/ex1_neutral_init_${seed}.pop')
output='cache/ex1_neutral_init_${seed}.pop'
comment=Create an empty simuPOP population for specified regions.

[neutral_40]
action=EvolvePopulation(
	output='ex1_neutral_evolved_${seed}.pop',
	mutator=RefGenomeMutator(regions='%(regions)s', model='JC69', rate=[1.8e-8 * %(scale)s * 4. / 3.]),
	transmitter=FineScaleRecombinator(regions='%(regions)s', scale=%(scale)s, output='map.txt'),
	demoModel = MultiStageModel([
        InstantChangeModel(T=81000 / %(scale)s, N0=8100 / %(scale)s,
			G=[70000 / %(scale)s, 71000 / %(scale)s], NG=[7900 / %(scale)s, 8100 / %(scale)s]),
        ExponentialGrowthModel(T=370 / %(scale)s, NT=900000 / %(scale)s)
     ]))
comment=Evolve and expand the population using a JC69 mutation model
	and a demographic model that evolves a population of size 8100 for
	81000 generations before it is expanded to size 900000 in 370 generations.

[neutral_50]
action=OutputPopulationStatistics(
	mut_count=['ex1_neutral_freq_spec_${seed}.txt', 700],
	)
comment=Get allele frequency spectrum in a sample of 700 individuals.

[neutral_999]
action=RemoveIntermediateFiles(['ex1_neutral_evolved_${seed}.pop', 'cache/ex1_neutral_init_${seed}.pop'])
comment=Remove intermediate populations to save diskspace.


