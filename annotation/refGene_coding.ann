# Copyright (C) 2011 - 2013 Bo Peng (bpeng@mdanderson.org)
# Distributed under GPL. see <http://www.gnu.org/licenses/>
#
# Please refer to http://varianttools.sourceforge.net/Annotation/New
# for a description of the format of this file.

[linked fields]
hg19=chr, coding_start, coding_end

[data sources]
anno_type=range
description=RefGene specifies known human protein-coding and non-protein-coding genes taken
	from the NCBI RNA reference sequences collection (RefSeq). This database contains all coding regions of the refSeq genes.
version=hg19_20130904
source_url=ftp://hgdownload.cse.ucsc.edu/goldenPath/hg19/database/refGene.txt.gz
direct_url=annoDB/refGene_coding-hg19_20130904.DB.gz	9d18a1faecf2f533a036a683dcd948b1
source_type=txt

[name]
index=2
type=VARCHAR(255)
comment=Gene name

[chr]
index=3
adj=RemoveLeading('chr')
type=VARCHAR(20)

[strand]
index=4
type=CHAR(1) NULL
comment=which DNA strand contains the observed alleles

[txStart]
index=5
type=INTEGER
adj=IncreaseBy(1)
comment=Transcription start position

[txEnd]
index=6
type=INTEGER
comment=Transcription end position

[cdsStart]
index=7
type=INTEGER
adj=IncreaseBy(1)
comment=Coding region start

[cdsEnd]
index=8
type=INTEGER
comment=Coding region end

[exonCount]
index=9
type=INTEGER NULL
comment=Number of exons

[coding_start]
index=7,8,10,11
# 7,  cds start
# 8,  cds end
# 10, split
# if single item, return larger of cds start and exon_start
# if multiple items, split and return larger of cds start and exon_start
#     but exon needs to be in cds, that is to say
adj=lambda x: str(max(int(x[0]),int(x[2]))+1) if ',' not in x[2] else tuple([str(max(int(x[0]), int(y))+1) for y,z in zip(x[2].split(','), x[3].split(',')) if y and int(y) <= int(x[1]) and int(z) >= int(x[0])])
type=INTEGER NOT NULL
comment=coding start position

[coding_end]
index=7,8,10,11
adj=lambda x: str(min(int(x[1]),int(x[3]))) if ',' not in x[3] else tuple([str(min(int(x[1]), int(z))) for y,z in zip(x[2].split(','), x[3].split(',')) if y and int(y) <= int(x[1]) and int(z) >= int(x[0])])
type=INTEGER NOT NULL
comment=coding end position

[score]
index=12
type=INTEGER NULL
comment=Score

[name2]
index=13
type=VARCHAR(255)
comment=Alternative name

[cdsStartStat]
index=14
type=VARCHAR(10)
comment=cds start stat, can be 'non', 'unk', 'incompl', and 'cmp1'

[cdsEndStat]
index=15
type=VARCHAR(10)
comment=cds end stat, can be 'non', 'unk', 'incompl', and 'cmp1'