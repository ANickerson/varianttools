#Variant tools schema version 1.0
#
# - The first line is required
# - Lines starting with # and ; are comments
# - Inline comments starts with ;

# - Required sections:
#
#   [linked fields]:
#		A database can provide one or more sets of linked fields by which it is linked
#		to the master variant table of the project. Each line should have format
#	        
#	        build=field1,field2,...
#
#	    where build is the build of a reference genome, or '*' if this annotation database
#	    can be linked to project with any referenge genome. One or more fields can be
#	    specified as 'linked fields':
#
#	    1. for 'variant' annotation database, they should be
#	       names of chr, pos, ref, and alt fields.
#	    2. for 'position' annotation database, they should be
#		   names of chr and pos fields.
#		3. for 'range' annotation database, they should be names of
#		   chr, start pos and ending pos fields.
#		4. for 'field' annotation database, they should be names of fields
#		   that link to the master variant table.
#       
#   [data sources]: This section can have keys
#       * description: description of the database
#       * anno_type: can be one of 'variant', 'position', 'range' or 'field'
#       * direct_url: URL to download annotation database directly. This is only
#           used for sqlite projects.
#       * source_type: type of source files, we currently only supported
#           tab based text file (txt)
#       * source_url: where to download source file.
#       * source_pattern: pattern of source files (used to exclude README etc)
#       * version: version of the database, which is not necessarily version 
#         of the data source. The convension is sourceVersion_dbVersion. If
#         unspecified, vtools will try to get it from filename. For example, 
#         dbNSFP-1.1_0.db will have version number 1.1_0.
# 
#   fields sections for the fields that will be imported.
#       * index: 1-based index of the index of the column in the database
#       * type: can be "chromosome", "0-based position", "1-based position",
#               and SQL allowed types such as "DECIMAL(7,6) NOT NULL"
#       * null (optional) if specified, value that will be treated as NULL.
#       * comment (optional) a description of the field
#
[linked fields]
hg18=chr, hg18pos, ref, alt
hg19=chr, hg19pos, ref, alt

[data sources]
description=dbNSFP version 1.1, maintained by Xiaoming Liu from UTSPH. Please cite "Liu X, Jian X, and Boerwinkle E. 2011. dbNSFP: a lightweight database of human non-synonymous SNPs and their functional predictions. Human Mutation. 32:894-899" if you find this database useful.
version=1.1_0 
anno_type=variant
direct_url=http://vtools.houstonbioinformatics.org/annoDB/dbNSFP-1.1_0.DB.gz
source_url=http://dl.dropbox.com/u/17001647/dbNSFP/dbNSFP1.1.chr1-22XY.zip
source_type=txt
source_pattern=dbNSFP.ch

[chr]
index=1
type=chromosome

[hg18pos]
index=2
type=1-based position

[ref]
index=3
type=CHAR(1) NOT NULL
comment=Reference nucleotide allele (as on the + strand)

[alt]
index=4
type=CHAR(1) NOT NULL
comment=Alternative nucleotide allele (as on the + strand)

[aaref]
index=5
type=CHAR(1) NULL
comment=reference amino acid

[aaalt]
index=6
type=CHAR(1) NULL
comment=alternative amino acid

[hg19pos]
index=7
type=1-based position
comment=physical position on the chromosome as to hg19 (1-based coordinate)
null=NA

[genename]
index=8
type=VARCHAR(48) NULL
comment=gene name

[geneid]
index=9
type=VARCHAR(48) NULL
comment=gene Entrez ID

[CCDSid]
index=10
type=VARCHAR(48) NULL
comment=CCDS ID

[refcodon]
index=11
type=CHAR(3) NULL
comment=reference codon

[codonpos]
index=12
type=INT
comment=position on the codon (1, 2 or 3)

[fold_degenerate]
index=13
type=INT
comment=degenerate type (0, 2 or 3)

[aapos]
index=14
type=INT
comment=amino acid position as to the protein

[cds_strand]
index=15
type=CHAR(1) NULL
comment=coding sequence (CDS) strand (+ or ?)

[LRT_Omega]
index=16
type=FLOAT NULL
null=NA
comment=estimated nonsynonymous-to-synonymous-rate ratio (reported by LRT)

[PhyloP_score]
index=17
type=FLOAT NULL
comment=PhyloP score, phyloPnew=1-0.5x10^phyloPori if phyloPori>0 or phyloPnew=0.5x10^phyloPori if phyloPori<0

[PlyloP_pred]
index=18
type=VARCHAR(2) NULL
null=NA
comment=PhyloP prediction, C(onserved) or N(on-conserved)

[SIFT_score]
index=19
type=FLOAT NULL
comment=SIFT score, SIFTnew=1-SIFTori

[SIFT_pred]
index=20
type=VARCHAR(2) NULL
null=NA
comment=SIFT prediction, D(amaging) or T(olerated)

[Polyphen2_score]
index=21
type=FLOAT NULL
comment=Polyphen2 score, i.e. pph2_prob

[Polyphen2_pred]
index=22
type=VARCHAR(2) NULL
null=NA
comment=Polyphen2 prediction,  "D" ("probably damaging"), "P" ("possibly damaging") or "B" ("benign") 

[LRT_score]
index=23
type=FLOAT NULL
comment=LRT score, LRTnew=1-LRTorix0.5 if <1, or LRTnew=LRTorix0.5 if >=1

[LRT_pred]
index=24
type=VARCHAR(2) NULL
null=NA
comment=LRT prediction, D(eleterious), N(eutral) or U(nknown)

[MutationTaster_score]
index=25
type=FLOAT NULL
comment=MutationTaster score

[MutationTaster_pred]
index=26
type=VARCHAR(2) NULL
null=NA
comment=MutationTaster prediction, "A" ("disease_causing_automatic"), "D" ("disease_causing"), "N" ("polymorphism") or "P" ("polymorphism_automatic")

[Ancestral_allele]
index=27
type=CHAR(1) NULL
null=NA
comment=Ancestral allele (based on 1000 genomes reference data)

[UniSNP_ids]
index=28
type=VARCHAR(128)
null=.
comment="rs numbers from UniSNP, which is a cleaned version of dbSNP build 129, in format: rs number1;rs number2;..."

[Allele_freq]
index=29
type=VARCHAR(48)
null=.
comment="allele frequency recorded in dbSNP, in format: allele1/count of allele1;allele2/count of allele2;..."

[Alt_gene_name]
index=30
type=VARCHAR(128)
comment=alternative gene names, separated by bar

[dbXrefs]
index=31
type=VARCHAR(64)
comment=database cross references (IDs of HGNC, MIM, Ensembl and HPRD, separated by bar)

[Descriptive_gene_name]
index=32
type=VARCHAR(128)
comment=descriptive gene name

[CEU_alt_hc]
index=33 SequentialExtractor([ValueExtractor('CEU:'), FieldExtractor(1, '/')])
type=INTEGER
null=.
comment="Number of alternative allele in the CEU population, reported by 1000 genome high coverage data"

[CEU_total_hc]
index=33 SequentialExtractor([ValueExtractor('CEU:'), FieldExtractor(2, '/')])
type=INTEGER
null=.
comment="Total number of allele in the CEU population, reported by 1000 genome high coverage data"


[YRI_alt_hc]
index=33 SequentialExtractor([ValueExtractor('YRI:'), FieldExtractor(1, '/')])
type=INTEGER
null=.
comment="Number of alternative allele in the YRI population, reported by 1000 genome high coverage data"

[YRI_total_hc]
index=33 SequentialExtractor([ValueExtractor('YRI:'), FieldExtractor(2, '/')])
type=INTEGER
null=.
comment="Total number of allele in the YRI population, reported by 1000 genome high coverage data"


[LWK_alt_hc]
index=33 SequentialExtractor([ValueExtractor('LWK:'), FieldExtractor(1, '/')])
type=INTEGER
null=.
comment="Number of alternative allele in the LWK population, reported by 1000 genome high coverage data"

[LWK_total_hc]
index=33 SequentialExtractor([ValueExtractor('LWK:'), FieldExtractor(2, '/')])
type=INTEGER
null=.
comment="Total number of allele in the LWK population, reported by 1000 genome high coverage data"


[TSI_alt_hc]
index=33 SequentialExtractor([ValueExtractor('TSI:'), FieldExtractor(1, '/')])
type=INTEGER
null=.
comment="Number of alternative allele in the TSI population, reported by 1000 genome high coverage data"

[TSI_total_hc]
index=33 SequentialExtractor([ValueExtractor('TSI:'), FieldExtractor(2, '/')])
type=INTEGER
null=.
comment="Total number of allele in the TSI population, reported by 1000 genome high coverage data"

[CHB_alt_hc]
index=33 SequentialExtractor([ValueExtractor('CHB:'), FieldExtractor(1, '/')])
type=INTEGER
null=.
comment="Number of alternative allele in the CHB population, reported by 1000 genome high coverage data"

[CHB_total_hc]
index=33 SequentialExtractor([ValueExtractor('CHB:'), FieldExtractor(2, '/')])
type=INTEGER
null=.
comment="Total number of allele in the CHB population, reported by 1000 genome high coverage data"


[JPT_alt_hc]
index=33 SequentialExtractor([ValueExtractor('JPT:'), FieldExtractor(1, '/')])
type=INTEGER
null=.
comment="Number of alternative allele in the JPT population, reported by 1000 genome high coverage data"

[JPT_total_hc]
index=33 SequentialExtractor([ValueExtractor('JPT:'), FieldExtractor(2, '/')])
type=INTEGER
null=.
comment="Total number of allele in the JPT population, reported by 1000 genome high coverage data"

[CHD_alt_hc]
index=33 SequentialExtractor([ValueExtractor('CHD:'), FieldExtractor(1, '/')])
type=INTEGER
null=.
comment="Number of alternative allele in the CHD population, reported by 1000 genome high coverage data"

[CHD_total_hc]
index=33 SequentialExtractor([ValueExtractor('CHD:'), FieldExtractor(2, '/')])
type=INTEGER
null=.
comment="Total number of allele in the CHD population, reported by 1000 genome high coverage data"


[CEU_alt_lc]
index=34 SequentialExtractor([ValueExtractor('CEU:'), FieldExtractor(1, '/')])
type=INTEGER
null=.
comment="Number of alternative allele in the CEU population, reported by 1000 genome low coverage data"

[CEU_total_lc]
index=34 SequentialExtractor([ValueExtractor('CEU:'), FieldExtractor(2, '/')])
type=INTEGER
null=.
comment="Total number of allele in the CEU population, reported by 1000 genome low coverage data"

[YRI_alt_lc]
index=34 SequentialExtractor([ValueExtractor('YRI:'), FieldExtractor(1, '/')])
type=INTEGER
null=.
comment="Number of alternative allele in the YRI population, reported by 1000 genome low coverage data"

[YRI_total_lc]
index=34 SequentialExtractor([ValueExtractor('YRI:'), FieldExtractor(2, '/')])
type=INTEGER
null=.
comment="Total number of allele in the YRI population, reported by 1000 genome low coverage data"

[CHBJPT_alt_lc]
index=34 SequentialExtractor([ValueExtractor('CHBJPT:'), FieldExtractor(1, '/')])
type=INTEGER
null=.
comment="Number of alternative allele in the CHBJPT population, reported by 1000 genome low coverage data"

[CHBJPT_total_lc]
index=34 SequentialExtractor([ValueExtractor('CHBJPT:'), FieldExtractor(2, '/')])
type=INTEGER
null=.
comment="Total number of allele in the CHBJPT population, reported by 1000 genome low coverage data"


